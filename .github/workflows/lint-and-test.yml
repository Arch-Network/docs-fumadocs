name: Lint and Test

on:
  pull_request:
    paths:
      - 'src/**'
      - 'content/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/lint-and-test.yml'
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'content/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript Check
        run: npx tsc --noEmit

  build:
    name: Build Next.js App
    runs-on: ubuntu-latest
    needs: [lint, type-check]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check build output
        run: |
          if [ ! -d ".next" ]; then
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi
          echo "✅ Build successful"

  link-check:
    name: Check Broken Links
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for link checking
        run: npm run build

      - name: Start server
        run: npm start &
        env:
          NODE_ENV: production

      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Check links
        run: |
          npx linkinator http://localhost:3000 \
            --recurse \
            --skip "^(?!http://localhost:3000)" \
            --verbosity error
        continue-on-error: true

      - name: Comment PR if links broken
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Broken Links Detected**\n\nPlease check the build logs for broken links in the documentation.'
            })

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run markdownlint
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: content/
          config_file: .markdownlint.json
          ignore_files: node_modules/
        continue-on-error: true
